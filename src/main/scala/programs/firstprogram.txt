

def factorial(n: Nat): Nat := {
    match n with {
        | 0 => 1
        | i => i * factorial(i-1)
    }
};

#![X:Nat] {
    let a := 1;
    let x := X;
    while (x > 0) #![(a * factorial(x)) = factorial(X)] do {
        let a := x * a;
        let x := x - 1
    }
} #![a = factorial(X)]
